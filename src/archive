// GraphQL

// Schema //

// type Swatch @model {
//     id: ID!
//     ownerId: String!
//     ownerUsername: String!
//     hexCode: String!
//   }

//   type MasterSwatch @model {
//     id: ID!
//     ownerId: String!
//     ownerUsername: String!
//     swatches: [Swatch] @connection
//   }

//   type Project @model {
//     id: ID!
//     ownerId: String!
//     ownerUsername: String!
//     projectTitle: String!
//     swatches: [Swatch] @connection
//   }

//   type ColorHex @model {
//     colors: AWSJSON
//   }

// Queries //

export const listColorHexs = /* GraphQL */ `
  query ListColorHexs($format: String!) {
    listColorHexs(format: $format)
  }
`;

// Actions

// Old Axios requests //

const runAxios = async () => {
  const res = await axios.get("/api/palettes/random?format=json");
  if (res.data[0].colors.length === 5) return res.data[0].colors;
  else return runAxios();
};

const result = runAxios();
result.then(payload => {
  dispatch({
    type: random === "new_random" ? GET_RANDOM_COLORS : GET_COLORS,
    payload: payload
  });
});

// AppSync

// Resolver //

// {
//     "version": "2018-05-29",
//     "method": "GET",
//     ## E.G. if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts **
//     "resourcePath": "/api/palettes/random",
//     "params":{
//         "query": $util.toJson($ctx.args),
//         "headers": {
//             "Authorization": "$ctx.request.headers.Authorization"
//         }
//     }
// }

// ## Raise a GraphQL field error in case of a datasource invocation error
// #if($ctx.error)
//   $util.error($ctx.error.message, $ctx.error.type)
// #end
// ## if the response status code is not 200, then return an error. Else return the body **
// #if($ctx.result.statusCode == 200)
//     ## If response is 200, return the body.
//     $ctx.result.body
// #else
//     ## If response is not 200, append the response to error block.
//     $utils.appendError($ctx.result.body, "$ctx.result.statusCode")
// #end

// Schema Query //

// listColorHexs(format: String): AWSJSON
